#!/usr/bin/env node

var fs = require("fs");
var path = require('path');
var watchify = require('watchify');
var browserify = require('browserify');
var babelify = require("babelify");
var debowerify = require("debowerify");
var exorcist = require("exorcist");

var srcPath = "./js/";
var distPath = "./js-dist";

var bundler = watchify(browserify({
    debug: true,
    entries: ['./js/main.js'],
    transform: ["babelify", "debowerify"],
    cache: {}, packageCache: {}, fullPaths: true
  }));

  bundler.on("update", function () {
    var updateStart = Date.now();
    
    bundler
      .bundle()
      .pipe(exorcist(path.join(distPath, "bundle.js.map")))
      .pipe(fs.createWriteStream(path.join(distPath, "bundle.js")));

    console.log("change detected, bundle compiled in " + (Date.now() - updateStart) + "s");

    return bundler;
  })
  .bundle()
  .pipe(exorcist(path.join(distPath, "bundle.js.map")))
  .pipe(fs.createWriteStream(path.join(distPath, "bundle.js")));

  console.log("Watching for source files change...");